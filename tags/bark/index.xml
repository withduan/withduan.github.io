<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bark on JL DUAN‘s Blog</title>
    <link>https://iduan.me/tags/bark/</link>
    <description>Recent content in Bark on JL DUAN‘s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 08 Apr 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://iduan.me/tags/bark/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>自建 Bark 后端服务</title>
      <link>https://iduan.me/posts/bark-server-self-hosting/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://iduan.me/posts/bark-server-self-hosting/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.v2ex.com/t/467407&#34;&gt;Bark&lt;/a&gt; 是一款可以给 iPhone 发送自定义推送的服务，你可以利用 Bark 做一些有趣的事情，比如我之前分享的：&lt;a href=&#34;https://sspai.com/post/71054&#34;&gt;配合 SmsForward 转发 Android 设备的短信至 iPhone&lt;/a&gt;。Bark 本身提供后端服务，同时也开源了服务端代码，你可以利用 docker 轻松在服务器端部署私有化 Bark 后端服务。&lt;/p&gt;&#xA;&lt;p&gt;之前在博客有&lt;a href=&#34;https://iduan.me/archives/4/&#34;&gt;提到过&lt;/a&gt;我闲置了一个腾讯云虚拟主机，由于域名备案的关系，现在无法正常使用。我想与其闲置在那里，不如拿来做点有趣的事情。&lt;/p&gt;&#xA;&lt;p&gt;我本身对服务器这方面不是特别了解，看到 Bark 后端只提供了 docker 这一种部署方式。本来可以在腾讯云服务器的管理面板中直接重置系统镜像为 docker，这时忽然想起来，之前建站经常要用到的宝塔面板就可以安装 docker 管理器，宝塔面板里编辑服务器里的文件也比较方便，所以就先安装了宝塔面板，方便我后续进行操作。&lt;/p&gt;&#xA;&lt;p&gt;按照官方的&lt;a href=&#34;https://day.app/2018/06/bark-server-document/&#34;&gt;教程&lt;/a&gt;，我成功地在服务器中部署好了 Bark 后端服务。本来想解析一个二级域名&lt;code&gt;push.iduan.me&lt;/code&gt;在这台服务器上，方便配置。谁知解析生效还没过 10 分钟，就被腾讯云拦截了，由于这个域名还没有备案，按照相关法律法规的要求，解析是无法生效的，因此在配置后端服务时，只能填写 IP 地址，不过影响也不大～&lt;/p&gt;&#xA;&lt;p&gt;最麻烦的是给这个自建的后端服务添加 SSL 支持，官方教程只是阐述了怎么部署支持 http 访问的后端，根本没提 SSL 的事情。以前在宝塔面板里为网站开启 https 访问的方法在这里完全行不通，为此又耗费大量时间去网络中搜索，等这套后端服务彻底搞好的时候已经是半夜两点了……&lt;/p&gt;&#xA;&lt;p&gt;以下是服务搭建过程中开启 SSL 的一点点笔记：&lt;/p&gt;&#xA;&lt;h4 id=&#34;为-ip-地址申请-ssl-证书&#34;&gt;✍🏻为 IP 地址申请 SSL 证书&lt;/h4&gt;&#xA;&lt;p&gt;大部分云服务商不支持为 IP 地址申请 SSL 证书，可以访问 &lt;a href=&#34;https://zerossl.com/&#34;&gt;ZeroSSL&lt;/a&gt; 申请 IP 地址的SSL证书，免费账户申请的证书有效期只有三个月，而且不支持自动续签。&lt;/p&gt;&#xA;&lt;p&gt;将签发的证书（两个&lt;code&gt;.crt&lt;/code&gt;文件，一个&lt;code&gt;.key&lt;/code&gt;文件）上传至&lt;code&gt;/www/server/nginx/conf/cert&lt;/code&gt;目录下（没有 cert 文件夹就新建一个）&lt;/p&gt;&#xA;&lt;h4 id=&#34;为服务器启用-ssl&#34;&gt;✍🏻为服务器启用 SSL&lt;/h4&gt;&#xA;&lt;p&gt;修改 &lt;code&gt;/www/server/nginx/conf&lt;/code&gt; 路径下 &lt;code&gt;nginx.conf&lt;/code&gt; 配置文件，添加以下内容：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;server {&#xA;    listen 443 ssl http2;&#xA;    listen [::]:443 ssl http2;&#xA;    server_name 1.2.3.4;&#xA;    add_header Strict-Transport-Security &amp;#34;max-age=31536000; includeSubdomains; preload&amp;#34;;&#xA;    ssl_certificate cert/certificate.crt;&#xA;    ssl_certificate_key cert/private.key;&#xA;    ssl_session_timeout 1d;&#xA;    ssl_session_cache shared:SSL:50m;&#xA;    ssl_session_tickets off;&#xA;    ssl_protocols TLSv1.2;&#xA;    ssl_ciphers &amp;#39;ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256&amp;#39;;&#xA;    ssl_prefer_server_ciphers on;&#xA;    ssl_stapling on;&#xA;    ssl_stapling_verify on;&#xA;    ssl_trusted_certificate cert/ca_bundle.crt;&#xA;    location / {&#xA;       proxy_pass http://127.0.0.1:8080;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;请将第4行中的&lt;code&gt;1.2.3.4&lt;/code&gt;修改为服务器 IP 地址；&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;cert/certificate.crt&lt;/code&gt;、&lt;code&gt;cert/private.key&lt;/code&gt;和&lt;code&gt;cert/ca_bundle.crt&lt;/code&gt;均为相对路径下存放的证书文件，绝对路径为：&lt;code&gt;/www/server/nginx/conf/cert&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;解决部分-android-app-连接-bark-后端服务时报错的问题&#34;&gt;✍🏻解决部分 Android App 连接 Bark 后端服务时报错的问题&lt;/h4&gt;&#xA;&lt;p&gt;开启 SSL 之后，在部分 Android 应用内访问服务器后端地址时可能会报错“java security cert.CertPathValidatorException: Trust anchor for certification path not found”，原因是后端服务在部署 SSL 时缺少了中间证书。&lt;/p&gt;&#xA;&lt;p&gt;你可以利用 &lt;a href=&#34;https://www.myssl.cn/tools/downloadchain.html&#34;&gt;https://www.myssl.cn/tools/downloadchain.html&lt;/a&gt; 这个工具，使用已有的&lt;code&gt;cert/certificate.crt&lt;/code&gt;文件快速生成中间证书，最后会得到&lt;code&gt;chain.crt&lt;/code&gt;这个文件。&lt;/p&gt;&#xA;&lt;p&gt;用文本编辑器打开&lt;code&gt;certificate.crt&lt;/code&gt;，在所有代码后面依次添加&lt;code&gt;ca_bundle.crt&lt;/code&gt;、&lt;code&gt;chain.crt&lt;/code&gt;这两个文件里的内容，最后的效果应该是这样的：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-----BEGIN CERTIFICATE-----&#xA;这里是 certificate.crt 原本的所有内容&#xA;-----END CERTIFICATE-----&#xA;-----BEGIN CERTIFICATE-----&#xA;这里是 ca_bundle.crt 文件中的所有内容&#xA;-----END CERTIFICATE-----&#xA;-----BEGIN CERTIFICATE-----&#xA;这里是 chain.crt 文件中的所有内容&#xA;-----END CERTIFICATE-----&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存文件，用这个编辑之后的&lt;code&gt;certificate.crt&lt;/code&gt;文件替换服务器中之前上传的的&lt;code&gt;certificate.crt&lt;/code&gt;，个别应用中报错的问题即可解决。&lt;/p&gt;</description>
    </item>
    <item>
      <title>巧用开源方案，零成本实现验证码短信转发</title>
      <link>https://iduan.me/posts/forwarding-messages-from-android-to-iphone/</link>
      <pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://iduan.me/posts/forwarding-messages-from-android-to-iphone/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;减少重复切换和操作，双机党们再也不用收到验证码的时候到处找备机啦。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;为了能够用两个微信彻底分离工作和生活，又苦于 iPhone 不能双开微信，我开始使用 Android 手机作为工作备用机，无奈之下加入了双机党的阵营。&lt;/p&gt;&#xA;&lt;p&gt;我有两个号码： A 和 B，因为号码 A 流量多，就把它留在了主力机上，号码 B 挪到了备用机。可大部分服务都是用号码 B 注册的，使用主力机时，时常因为各种原因，需要填写号码 B 收到的短信验证码，此时又得拿起备用机查看验证码。如此反复，真的令人非常不爽。&lt;/p&gt;&#xA;&lt;p&gt;为此我开始寻找 Android 短信转发的解决方案，最终通过 SmsForwarder + Bark 解决了这个问题，经过一段时间的使用，效果非常不错。现在我把这个 Android 手机短信转发给 iPhone 的方案分享给大家，有需要的朋友可以作为参考。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/withduan/picx-images-hosting@master/forwarding-messages-from-android-to-iphone-01.webp&#34; alt=&#34;forwarding-messages-from-android-to-iphone-01&#34;&gt;短信转发至 iPhone 效果&lt;/p&gt;&#xA;&lt;h4 id=&#34;在-iphone-中安装-bark-app&#34;&gt;在 iPhone 中安装 Bark App&lt;/h4&gt;&#xA;&lt;p&gt;🔗 下载地址：&lt;a href=&#34;https://apps.apple.com/cn/app/id1403753865&#34;&gt;App Store&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Bark 是一款 Apple 生态内的自定义推送服务，它充分利用了 Apple 推送通知服务 (APNs) 进行工作，原理是将自定义推送内容通过 发送端 &amp;gt; Bark 服务端 &amp;gt; 苹果 APNs 服务器 &amp;gt; 你的设备 &amp;gt; Bark 进行传递。&lt;/p&gt;&#xA;&lt;p&gt;由于完全依赖 Apple 推送通知服务，app 本身无需前台运行，几乎不会对 iPhone 的续航产生影响。&lt;/p&gt;&#xA;&lt;p&gt;第一次打开 Bark 时，会自动为你的设备生成 key ，复制 app 首页自动生成的第一个带有 key 参数的 URL 备用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/withduan/picx-images-hosting@master/forwarding-messages-from-android-to-iphone-02.webp&#34; alt=&#34;forwarding-messages-from-android-to-iphone-02&#34;&gt;Bark&lt;/p&gt;&#xA;&lt;h4 id=&#34;在-android-手机中安装短信转发器-smsforwarder&#34;&gt;在 Android 手机中安装短信转发器 SmsForwarder&lt;/h4&gt;&#xA;&lt;p&gt;🔗 下载地址：&lt;a href=&#34;https://www.coolapk.com/apk/com.idormy.sms.forwarder&#34;&gt;酷安&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;SmsForwarder 是我在酷安找到的 &lt;a href=&#34;https://github.com/pppscn/SmsForwarder&#34;&gt;开源&lt;/a&gt; Android 短信转发工具，它有一个简单直白的中文名称「短信转发器」，这款 app 在转发短信时，能设置转发模板，还能对短信内容设置多种筛选条件，可以利用钉钉、飞书、邮箱、企业微信、Server 酱、Telegram 等多种渠道进行推送。&lt;/p&gt;&#xA;&lt;p&gt;打开「短信转发器」，依次点击「发送通道」–「添加发送通道」，选择「Bark」，填入上一步在 iPhone 端 Bark 中生成的推送地址，点击「确定」保存设置。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/withduan/picx-images-hosting@master/forwarding-messages-from-android-to-iphone-03.webp&#34; alt=&#34;forwarding-messages-from-android-to-iphone-03&#34;&gt;将 Bark 设置为发送通道&lt;/p&gt;&#xA;&lt;p&gt;返回 app 首页，点击「转发规则」–「添加短信转发」，设置好你自己的短信转发规则。比如：当你只想转发备用机的验证码短信时，可以将短信内容匹配关键字设置为「验证码」，这样只有包含验证码的短信才会被转发，其它诸如广告营销、公益宣传等内容的短信则不会被转发。此处也可以根据自己的需要添加其它规则。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/withduan/picx-images-hosting@master/forwarding-messages-from-android-to-iphone-04.webp&#34; alt=&#34;forwarding-messages-from-android-to-iphone-04&#34;&gt;设置短信转发规则&lt;/p&gt;&#xA;&lt;p&gt;除了转发短信，SmsForwarder 还可以转发 Android 手机的未接来电和应用通知，因为与本文主题无关，感兴趣的朋友可以自行下载体验。&lt;/p&gt;&#xA;&lt;h4 id=&#34;为-smsforwarder-设置应用权限-&#34;&gt;为 SmsForwarder 设置应用权限 ⚠️&lt;/h4&gt;&#xA;&lt;p&gt;出于续航因素考虑，Android 手机的后台策略都非常保守，致使 SmsForwarder 在后台运行时，容易被系统 kill 软件后台进程。为保证短信转发功能的正常运作，需要在手机系统中设置好 app 的自启动、后台运行、电池优化等必要权限。由于各品牌手机的设置方式存在差异，在此不做详细说明。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/withduan/picx-images-hosting@master/forwarding-messages-from-android-to-iphone-05.webp&#34; alt=&#34;forwarding-messages-from-android-to-iphone-05&#34;&gt;示例：realme UI 后台权限设置&lt;/p&gt;&#xA;&lt;p&gt;出于隐私角度考虑，一些国内的定制系统会默认隐藏包含验证码的短信，第三方应用即使被授予短信权限，也无法读取到这类型的短信。因此需要在手机短信设置中关闭相关防护功能，此类短信才能被读取并转发至其它设备。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/withduan/picx-images-hosting@master/forwarding-messages-from-android-to-iphone-06.webp&#34; alt=&#34;forwarding-messages-from-android-to-iphone-06&#34;&gt;realme UI 验证码安全保护&lt;/p&gt;&#xA;&lt;h4 id=&#34;将-android-手机收到的验证码转发至-mac&#34;&gt;将 Android 手机收到的验证码转发至 Mac&lt;/h4&gt;&#xA;&lt;p&gt;根据同样的原理，你也可以在 Mac App Store 中搜索安装 &lt;a href=&#34;https://apps.apple.com/cn/app/id1403753865&#34;&gt;Bark&lt;/a&gt;，生成推送地址后，在 SmsForwarder 中将其设置为第二个推送通道。这样你就可以在 iPhone 和 Mac 上同时收到来自 Android 手机的验证码短信，方便你在使用 Mac 时填写验证码。&lt;/p&gt;&#xA;&lt;h4 id=&#34;总结&#34;&gt;总结&lt;/h4&gt;&#xA;&lt;p&gt;得益于 Apple 推送通知服务的稳定性，无论是 WiFi 还是蜂窝数据，这一套短信转发方案几乎都没有延迟，使用起来非常的方便。缺点是两台设备必须都要联网才能实现转发和接收，而且只能从 Android 转发短信到 iPhone，反向无效。&lt;/p&gt;&#xA;&lt;p&gt;如果对 Bark 提供的后端服务有隐私方面的顾虑，你也可以通过该项目在 &lt;a href=&#34;https://github.com/Finb/bark-server&#34;&gt;GitHub&lt;/a&gt; 公开的后端代码自行搭建后端服务。除了本文中提到的 Bark，你还可以使用 &lt;a href=&#34;https://github.com/easychen/pushdeer&#34;&gt;PushDeer&lt;/a&gt; 等其它类似的推送服务进行转发，工作原理和配置方法也是类似的。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;© 本文著作权归作者 &lt;a href=&#34;https://sspai.com/u/iduan/updates&#34;&gt;@JLDUAN&lt;/a&gt; 所有，并授权少数派独家使用，未经少数派许可，不得转载使用。&#xA;原文地址 &lt;a href=&#34;https://sspai.com/post/71054&#34;&gt;https://sspai.com/post/71054&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;</description>
    </item>
  </channel>
</rss>
