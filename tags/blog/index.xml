<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on JL DUAN‘s Blog</title>
    <link>https://iduan.me/tags/blog/</link>
    <description>Recent content in Blog on JL DUAN‘s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 09 Dec 2024 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://iduan.me/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用 Cloudflare R2 &#43; uPic 打造私人图床</title>
      <link>https://iduan.me/posts/cloudflare-r2-upic/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0800</pubDate>
      <guid>https://iduan.me/posts/cloudflare-r2-upic/</guid>
      <description>&lt;p&gt;我的博客里有很多图片，比如本站访问量第一名的文章《&lt;a href=&#34;https://iduan.me/posts/creating-certificate-for-ipa-signing/&#34;&gt;利用 Apple 个人开发者账户创建可用于 ipa 自签名的证书&lt;/a&gt;》中使用大量截图对操作步骤进行辅助说明，方便我这样的小白用户。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;（幸好当时把文章的图片上传到了图床，方便访客浏览。要是和《&lt;a href=&#34;https://iduan.me/posts/self-driving-tour-in-2024/&#34;&gt;自驾游记录丨 2023，我在路上&lt;/a&gt;》这篇文章一样把所有图片直接放 GitHub，加载速度完全随缘…甚至有部分访客根本看不到文章的配图。）&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cloudflare R2 是一个网络存储服务，提供免费 10GB 存储空间，并且这 10GB &lt;strong&gt;只计算存储空间占用，不计算互联网流量&lt;/strong&gt;。也就是说，我们不仅可以白嫖这 10GB 存储空间保存图片，也不用额外支付产生的流量费用，这不是天生的图床圣体吗！ Cloudflare 功德+1&lt;/p&gt;&#xA;&lt;p&gt;虽然 10GB 空间看着不算大，但是一些流行的图床比如 &lt;a href=&#34;https://sm.ms&#34;&gt;sm.ms&lt;/a&gt; 的免费账户也只提供 5GB 空间而已。如果单张图片按 1MB 计算，这 10GB 空间也足够储存 10000+ 张图片，用来给个人网站做图床绝对足够了。我绑定域名试了一下，访问速度也还不错（至少比 GitHub 快吧）。&lt;/p&gt;&#xA;&lt;h1 id=&#34;1安装-upic&#34;&gt;1.安装 uPic&lt;/h1&gt;&#xA;&lt;p&gt;uPic 是 macOS 上的一个图床上传工具，虽然自身不支持直接将 Cloudflare R2 作为图床使用，但通过兼容的 Amazon S3 配置即可添加对 Cloudflare R2 等第三方 OSS 服务的支持。&lt;/p&gt;&#xA;&lt;p&gt;uPic 免费版止步于 0.21.1 不再更新，可以在 GitHub release 中下载。Mac App Store 中提供最新版，但是需要付费。最新版虽然没有直接在 GitHub 中提供打包好的 .dmg 文件，不过 uPic 本身开源，macOS 用户可以在 GitHub 中拉取最新的源码到本地，用 Xcode 编译运行就好（编译之前要提前安装 cocoapods，否则编译会报错，具体安装 cocoapods 流程不再赘述）。&lt;/p&gt;&#xA;&lt;p&gt;为尊重软件作者，我无法直接提供打包好的最新版 &lt;code&gt;.dmg&lt;/code&gt; 文件，请有需求的朋友在 Mac App Store 中安装或者自行下载 GitHub 源码编译使用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;下载地址：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GitHub：&lt;a href=&#34;https://github.com/gee1k/uPic&#34;&gt;https://github.com/gee1k/uPic&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Mac App Store：&lt;a href=&#34;https://apps.apple.com/us/app/id1510718678&#34;&gt;https://apps.apple.com/us/app/id1510718678&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2配置-cloudflare-r2-服务&#34;&gt;2.配置 Cloudflare R2 服务&lt;/h1&gt;&#xA;&lt;h2 id=&#34;21-开通-r2-服务&#34;&gt;2.1 开通 R2 服务&lt;/h2&gt;&#xA;&lt;p&gt;打开 Cloudflare 控制台 &lt;a href=&#34;https://dash.cloudflare.com&#34;&gt;https://dash.cloudflare.com&lt;/a&gt;，选择左侧列表中的「R2 对象存储」。没有账号就先注册，初次使用 R2 需要绑定信用卡，只要存储文件不超过 10GB 就不会扣费。&lt;/p&gt;&#xA;&lt;h2 id=&#34;22-创建存储桶&#34;&gt;2.2 创建存储桶&lt;/h2&gt;&#xA;&lt;p&gt;设置名称、位置、存储类，位置尽可能靠近网站的主流客户，以最大化提高图床的加载速度。&#xA;&lt;img src=&#34;https://img.iduan.me/blog/cloudflare-r2-upic-01.webp&#34; alt=&#34;cloudflare-r2-upic-01&#34;&gt;&#xA;1️⃣ 设置名称方便自己识别，只能用小写英文字母、数字、连字符；&#xA;2️⃣ 默认选择「自动」；&#xA;3️⃣ 根据网站的主流访客选择适当位置，我选了「亚太地区」；&#xA;4️⃣ 默认选择「标准」；&#xA;5️⃣ 点击「创建储存桶」。&lt;/p&gt;&#xA;&lt;h2 id=&#34;23-配置域名&#34;&gt;2.3 配置域名&lt;/h2&gt;&#xA;&lt;p&gt;Cloudflare R2 默认会为每个存储桶提供一个 &lt;code&gt;r2.dev&lt;/code&gt; 子域，但是官方也不建议用于正式使用场景。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;启用 &lt;code&gt;r2.dev&lt;/code&gt; 访问时，Internet 上的任何人都可以使用公共 &lt;code&gt;r2.dev&lt;/code&gt; URL 查看此存储桶中的对象。但在使用时有速率限制，因此，不建议用于生产。此外，访问和缓存等 Cloudflare 功能无法再使用。&lt;a href=&#34;https://developers.cloudflare.com/r2/buckets/public-buckets/#managed-public-buckets-through-r2dev&#34;&gt;了解更多&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;况且：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这个 &lt;code&gt;r2.dev&lt;/code&gt; 子域名加起来大约有 50 个字符，再加上图片路径，致使完整的图片访问地址太长，使用不便；&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;r2.dev&lt;/code&gt; 域名可能会出现访问速度不稳定的情况 🌚&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;因此，为 R2 存储桶绑定自定义域名才是最优解。想必建个人网站的朋友应该都有域名，甚至手里不止一个域名 😝&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://img.iduan.me/blog/cloudflare-r2-upic-02.webp&#34; alt=&#34;cloudflare-r2-upic-02&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;1️⃣ 点击存储桶「tuchuang」的设置；&#xA;2️⃣ 输入你想要设置的域名（需要提前托管至 Cloudflare）；&#xA;3️⃣ 点击「继续」，按提示操作。绑定成功后会自动配置 SSL 证书。&lt;/p&gt;&#xA;&lt;p&gt;R2 存储桶仅支持绑定当前 Cloudflare 帐户上托管至 Cloudflare DNS 进行管理的域名。如果没有特别的需求，当你的域名 NS 记录不在 Cloudflare DNS 时，可以尝试在域名注册商处将 nameserver （也称为 NS 记录）设置为 Cloudflare nameserver。Cloudflare 会复制当前已存在的 DNS 记录，基本不会影响诸如域名邮箱等等的其他服务。&lt;/p&gt;&#xA;&lt;p&gt;只有一个域名的朋友推荐设置一个二级域名解析到存储桶，比如 &lt;code&gt;cdn.domain.com&lt;/code&gt;、&lt;code&gt;pic.domain.com&lt;/code&gt;、&lt;code&gt;static.domain.com&lt;/code&gt;，这样看起来规整、有序。&lt;/p&gt;&#xA;&lt;p&gt;如果你不想给图床设置二级域名，或者不方便修改域名 nameserver 记录（NS 记录），也可以随便申请一个便宜的域名用来绑定存储桶。因为图床域名一般不需要在前台展示，除非访客查看网页源代码才会看到图片地址，这样操作通常也没有什么影响。&lt;/p&gt;&#xA;&lt;p&gt;而我的域名正好托管在 Cloudflare，输入想要的二级域名后，自动添加了 DNS 解析记录，不需要自己手动配置。Cloudflare 会自动为绑定好的域名签发 SSL 证书，所以也不用担心在博客中插入跨域的图床资源后文章页会报错。&lt;/p&gt;&#xA;&lt;h2 id=&#34;24-创建-r2-api-令牌&#34;&gt;2.4 创建 R2 API 令牌&lt;/h2&gt;&#xA;&lt;p&gt;在 Cloudflare 控制台中选择左侧列表中的「R2 对象存储」，点击右侧「管理 API 令牌」，再点击新页面右侧的「创建 API 令牌」。&#xA;&lt;img src=&#34;https://img.iduan.me/blog/cloudflare-r2-upic-04.webp&#34; alt=&#34;cloudflare-r2-upic-04&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://img.iduan.me/blog/cloudflare-r2-upic-03.webp&#34; alt=&#34;cloudflare-r2-upic-03&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://img.iduan.me/blog/cloudflare-r2-upic-05.webp&#34; alt=&#34;cloudflare-r2-upic-05&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;1️⃣ 设置令牌名称方便识别；&#xA;2️⃣ 此处选中「对象读和写」；&#xA;3️⃣ 选择「仅应用于特定存储桶」；&#xA;4️⃣ 在下拉列表里选择之前创建好的存储桶「tuchuang」；&#xA;5️⃣ 点击「创建 API 令牌」。&lt;/p&gt;&#xA;&lt;h1 id=&#34;3-在-upic-中配置自建图床&#34;&gt;3 在 uPic 中配置自建图床&lt;/h1&gt;&#xA;&lt;p&gt;在 Cloudflare 中创建好 R2 API 令牌后，页面中会提供图床所需的各项参数，暂时不要关闭网页，将参数复制到 uPic 对应位置。&#xA;&lt;img src=&#34;https://img.iduan.me/blog/cloudflare-r2-upic-06.webp&#34; alt=&#34;cloudflare-r2-upic-06&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;1️⃣ 打开 uPic 设置（屏幕右上角找 uPic 状态栏图标），点击「图床」；&#xA;2️⃣ 点击设置窗口左下角的 ➕ 加号；&#xA;3️⃣ 选择 Amazon S3；&#xA;4️⃣ 勾选「自定义」；&#xA;5️⃣ 将令牌创建页面生成的「为 S3 客户端使用管辖权地特定的终结点」完整地址复制到这里；&#xA;6️⃣ 空间名称填存储桶的名称，和步骤 2.2 的名称要相同；&#xA;7️⃣ 下拉列表选择「bucket-owner-full-control」；&#xA;8️⃣ 将令牌创建页面生成的「访问密钥 ID」复制到这里；&#xA;9️⃣ 将令牌创建页面生成的「机密访问密钥」复制到这里；&#xA;🔟 填写步骤 2.3 中绑定的域名，域名前要加 &lt;code&gt;https://&lt;/code&gt; ；&#xA;1️⃣1️⃣ 根据自己喜好，按照下方的示例进行填写，也可以不改；&#xA;1️⃣2️⃣ 填好后点击「验证」，前面操作没什么问题会提示成功；&#xA;1️⃣3️⃣ 验证成功点击「保存」；&#xA;1️⃣4️⃣ 完成 uPic 图床配置后可以点击网页右下角的「完成」。&lt;/p&gt;&#xA;&lt;p&gt;此时图床就可以正常使用了，通过 uPic 上传图片后会自动复制图片地址，可以在 uPic 菜单中选择图床地址输出格式（url/html/markdown/ubb）。&lt;/p&gt;&#xA;&lt;h1 id=&#34;4设置-cors-策略可选&#34;&gt;4.设置 CORS 策略（可选）&lt;/h1&gt;&#xA;&lt;p&gt;什么是 CORS？结合当前场景，按通俗的话来说，就是只允许特定网站加载图床的资源，别人即使在别处引用了这个图片原始链接，也无法显示出图片，此举可以节约服务运行的流量成本。&lt;/p&gt;&#xA;&lt;p&gt;比如，我可以设置只允许博客 &lt;code&gt;https://domain.com&lt;/code&gt; 中的页面才能加载图床 &lt;code&gt;cdn.domain.com&lt;/code&gt; 中的图片文件，其他人如果想在别处引用这些图片，除非下载图片并上传到自己到服务器，直接在其他网站中引用我的图床链接是无效的。&lt;/p&gt;&#xA;&lt;p&gt;如果 Cloudflare R2 按照容量+流量计费（事实上这种计费方式在云计算服务中也很常见），这样的限制无疑能节约图床的运行成本。但是 R2 只对存储容量计费（10GB 以内免费），不收取流量费用，再加上个人网站通常访问量不大，所以这是一个可选步骤。&lt;/p&gt;&#xA;&lt;p&gt;如果你对这方面的信息很感兴趣，请浏览 Cloudflare 提供的 &lt;a href=&#34;https://developers.cloudflare.com/r2/buckets/cors/&#34;&gt;CORS 文档&lt;/a&gt;进行配置。我试着按照示例代码给出图床 CORS 配置的写法，没有经过测试，不要参考。🙅&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://img.iduan.me/blog/cloudflare-r2-upic-08.webp&#34; alt=&#34;cloudflare-r2-upic-08&#34;&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>只要活得够久……</title>
      <link>https://iduan.me/posts/typecho-update-20220401/</link>
      <pubDate>Fri, 01 Apr 2022 00:00:00 +0800</pubDate>
      <guid>https://iduan.me/posts/typecho-update-20220401/</guid>
      <description>&lt;p&gt;Typecho 在愚人节更新 1.2 版本，而距离其上一次更新已经过去了 1616 天……&lt;/p&gt;&#xA;&lt;p&gt;以下内容转载自 Typecho &lt;a href=&#34;http://typecho.org/blog/&#34;&gt;博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;h3 id=&#34;这不是玩笑我们回来了typecho-120&#34;&gt;这不是玩笑，我们回来了：Typecho 1.2.0&lt;/h3&gt;&#xA;&lt;p&gt;是的，你没有看错，经过漫长的等待，我们终于发布了 Typecho 1.2.0 正式版。这个版本的开发经历了如此长的时间，以至于我无法一次性列出这么长的详细改进列表。 除了修复了很多bug以外，我们重要的改进有如下几点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;新的编辑器实时预览自动跟随效果，以及主题内预览功能&lt;/li&gt;&#xA;&lt;li&gt;后台界面对移动端的适配&lt;/li&gt;&#xA;&lt;li&gt;新的安装程序&lt;/li&gt;&#xA;&lt;li&gt;进入 PHP 7.2 时代，以及对 PHP 8 的更好支持&lt;/li&gt;&#xA;&lt;li&gt;对&lt;a href=&#34;https://github.com/typecho/Dockerfile&#34;&gt;容器化&lt;/a&gt;的更好支持&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;除了新功能，大家也可以发现我们的版本号规则有变化。新的版本号会采用常规的3组数字组成，比如 1.2.0 。它适合小步快跑的开发模式，具体的解释可以看&lt;a href=&#34;https://joyqi.com/typecho/about-typecho-1-2-dev-plan.html&#34;&gt;这篇文章&lt;/a&gt;。&#xA;这个小小的软件记录了我们很多人生命中最美好的时光，大家用它在缤纷多彩的互联网上留下自己的印记。快乐，伤痛，成长，迷惘，时间无情地流过，我们却让它有了意义。这时我们再回头来看Typecho 的名称组成：轻击键盘，静候回音。在你写下文字的时候，涟漪已然产生。&#xA;而于我来说，十多年前键盘敲下的第一行代码，也不知不觉产生了这么大的回响。在这春回大地之际，感怀之余，未免又对未来心生希望起来。让我们大声宣布，&lt;a href=&#34;https://github.com/typecho/typecho/releases/tag/v1.2.0&#34;&gt;Typecho回来了&lt;/a&gt;！&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Typecho 功能优化小结</title>
      <link>https://iduan.me/posts/typecho-optimization/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0800</pubDate>
      <guid>https://iduan.me/posts/typecho-optimization/</guid>
      <description>&lt;p&gt;Typecho 是我在大学时就发现的一个博客程序，相比起流行的 WordPress，它的优势是代码更加轻量化，默认主题风格非常的简洁，适合我这种不喜欢过多折腾的用户。&lt;/p&gt;&#xA;&lt;p&gt;然而因其更新周期过于佛系（Typecho 上次更新是在 2017 年……）在多年的使用过程中，也会遇到一些问题或者是使用习惯差异，需要对其进行修改。&lt;/p&gt;&#xA;&lt;h5 id=&#34;1删除域名中的www&#34;&gt;1.删除域名中的&lt;code&gt;www&lt;/code&gt;&lt;/h5&gt;&#xA;&lt;p&gt;域名解析并不是 Typecho 自身的问题，但和网站最终展示效果相关，去除网址中的&lt;code&gt;www&lt;/code&gt;可以使网站地址更加简洁。&lt;/p&gt;&#xA;&lt;p&gt;另外当你申请免费https证书时，&lt;code&gt;www.iduan.me&lt;/code&gt;和&lt;code&gt;iduan.me&lt;/code&gt;需要分别申请证书，如果强制跳转不带&lt;code&gt;www&lt;/code&gt;的地址，则只需要申请一个不带&lt;code&gt;www&lt;/code&gt;的&lt;code&gt;iduan.me&lt;/code&gt;证书即可。&lt;/p&gt;&#xA;&lt;p&gt;注：博客网址去除&lt;code&gt;www&lt;/code&gt;只是个人习惯，如果你不喜欢也可以忽略这一步。&lt;/p&gt;&#xA;&lt;h5 id=&#34;2强制跳转-https&#34;&gt;2.强制跳转 🔒https&lt;/h5&gt;&#xA;&lt;p&gt;如果说去除&lt;code&gt;www&lt;/code&gt;是可有可无的习惯，那么为网站开启 https 访问在如今就显得十分有必要。开启 🔒https 后，网站地址左侧会出现一把锁🔒的标志，但是在未修改设置的情况下，网站依然可以通过输入 http 网址访问。我们同样可以修改服务器文件来实现强制全站 🔒https 访问。&lt;/p&gt;&#xA;&lt;p&gt;结合第 1 步的操作，最终可以实现如下效果：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;输入 &lt;a href=&#34;http://www.iduan.me&#34;&gt;http://www.iduan.me&lt;/a&gt; 跳转到 &lt;a href=&#34;https://iduan.me&#34;&gt;https://iduan.me&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;输入 &lt;a href=&#34;http://iduan.me&#34;&gt;http://iduan.me&lt;/a&gt; 跳转到 &lt;a href=&#34;https://iduan.me&#34;&gt;https://iduan.me&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;输入 &lt;a href=&#34;https://www.iduan.me&#34;&gt;https://www.iduan.me&lt;/a&gt; 跳转到 &lt;a href=&#34;https://iduan.me&#34;&gt;https://iduan.me&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;输入 &lt;a href=&#34;https://iduan.me&#34;&gt;https://iduan.me&lt;/a&gt; 跳转到 &lt;a href=&#34;https://iduan.me&#34;&gt;https://iduan.me&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;也就是说，网站最终都会跳转至不带&lt;code&gt;www&lt;/code&gt;的&lt;code&gt;https&lt;/code&gt;网址。&#xA;找到网站根目录下的&lt;code&gt;.htaccess&lt;/code&gt;文件，添加以下内容：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;RewriteEngine on   &#xA;#删除网址中的 www，并强制跳转 https&#xA;RewriteCond %{HTTP_HOST} ^www.iduan.me$&#xA;RewriteRule ^(.*)$ https://iduan.me/$1 [R=301,L]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;3为-typecho-添加-emoji-支持&#34;&gt;3.为 Typecho 添加 emoji 支持&lt;/h5&gt;&#xA;&lt;p&gt;Typecho 最后一次更新是 2017 年，而且它使用的编码是&lt;code&gt;utf8&lt;/code&gt;，在默认情况下不支持 emoji 的显示。不仅如此，如果你在后台编辑器编辑文章时加入了 emoji，因程序无法正常识别，在点击保存时，emoji 表情以及之后输入所有的内容都会被丢弃。&lt;/p&gt;&#xA;&lt;p&gt;我们只需要先进入 phpMyAdmin 后台，将数据库格式修改为&lt;code&gt;utf8mb4_unicode_ci&lt;/code&gt;，再编辑 Typecho 目录下&lt;code&gt;config.inc.php&lt;/code&gt;文件，将 Typecho 的编码方式由&lt;code&gt;utf8&lt;/code&gt;修改为&lt;code&gt;utf8mb4&lt;/code&gt;，即可正常编辑、保存和显示 emoji 内容。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
